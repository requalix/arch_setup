#!/bin/bash

if [ "$(id -u)" != "0" ]; then
  echo "Run as root."
  exit
fi

cd "$(dirname "${BASH_SOURCE[0]}")"

# TODO: add -c flag for custom configuration file.

### OPTIONS

set -a

# Set some defaults:

CRYPTNAME="root$$"

. roofix.conf

set +a

green=$'\033[32;1m'
red=$'\033[31;1m'
cyan=$'\033[36;1m'
reset=$'\033[0m'

if ! ping google.com -c 1 > /dev/null; then
  echo Error: Cannot ping google.
  exit
fi

echo

abort=false
echo "Configuration:"
echo
for varname in $(grep -hw '\$\<[A-Z_]\{2,\}\>' -o -R roofix.d | sort | uniq); do
  set | grep '^'${varname#$}'=' || echo -e "${varname#$}=${red}unset$reset"
done | sed 's/^/  /' | column -t -s=

echo

echo -n "If that configuration looks right to you, type LGTM in uppercase: "

read lgtm && [ "$lgtm" == "LGTM" ] || { echo -e "${red}Aborting$reset" ; exit ; }

passphrase() {
  echo -n "Encryption passphrase: "
  stty -echo && read passphrase && stty echo && echo
  echo -n "Again: "
  stty -echo && read passphrase2 && stty echo && echo
  [ "$passphrase" == "$passphrase2" ]
}

while ! passphrase; do
  echo "Did not enter same passphrase, try again."
done
export passphrase

error=false

rm -f roofix.log

pwd

find roofix.d | sort | while read path; do
  spaces=$(dirname "$path" | tr -cd '/' | sed -e 's/\//| /g' -e 's/ $/-/')
  name=$(basename "$path" |
         sed -e 's/^[^A-Za-z]*//' -e 's/_/ /g')
  printf "%-40s" "  $spaces$name"
  if [ -f "$path" ]; then
    echo "==== Running $path ====" >> roofix.log
    if "$path" >> roofix.log 2>&1; then
      echo -ne "${green}PASS$reset"
    else
      echo -ne "${red}FAIL$reset"
      error=true
    fi
  fi
  echo
done

if $error; then
  echo "Errors occured, see roofix.log for details"
fi
