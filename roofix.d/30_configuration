#!/bin/bash -ex

# KEYMAP
echo KEYMAP="$KEYMAP" > "$TARGET/etc/vconsole.conf"

# BOOTLOADER
uuid=$(blkid -s UUID -o value "$DEVICE"2)
if [ -n "$NO_ENCRYPTION" ]; then
  kernel_args="root=UUID=$uuid ro vga=773"
else
  kernel_args="root=/dev/mapper/root ro cryptdevice=UUID=$uuid:root vga=773"
fi
extlinux --install "$TARGET/boot"
dd if=/usr/lib/syslinux/mbr.bin conv=notrunc bs=440 count=1 of="$DEVICE"
cat > "$TARGET/boot/extlinux.conf" <<EOF
DEFAULT archlinux
LABEL   archlinux
LINUX   vmlinuz-linux
APPEND  $kernel_args
INITRD  initramfs-linux.img
EOF

# FSTAB
if [ -n "$RAMFS" ]; then
  echo > "$TARGET"/etc/fstab
else
  genfstab -U -p "$TARGET" > "$TARGET"/etc/fstab
fi

# HOSTNAME
echo "$HOSTNAME" > "$TARGET"/etc/hostname

# LOCALE
echo LANG="$LANG" > "$TARGET"/etc/locale.conf
sed -i -e 's/^#.*\('"$LANG"'\)/\1/' "$TARGET"/etc/locale.gen
arch-chroot "$TARGET" locale-gen

# INITCPIO
rm -f "$TARGET/boot/"*img
[ -z "$NO_ENCRYPTION" ] && sed -i -e 's/^\(HOOKS=.*\)\(filesystems\)/\1keymap encrypt \2/' "$TARGET"/etc/mkinitcpio.conf
cp -af templates/etc/mkinitcpio.d "$TARGET/etc" # don't generate useless fallback
if [ -n "$RAMFS" ]; then
  sed -i -e 's/^\(HOOKS=.*\)\(filesystems\)/\1roofix \2/' "$TARGET"/etc/mkinitcpio.conf
  cp -af templates/usr/lib/initcpio "$TARGET/usr/lib" # copy across roofix hooks
fi
sed -i -e 's/^\(HOOKS=.*\) autodetect/\1/' "$TARGET"/etc/mkinitcpio.conf
arch-chroot "$TARGET" mkinitcpio -p linux

# PACMAN
echo Server = "$MIRROR" > "$TARGET"/etc/pacman.d/mirrorlist
echo Server = "$BACKUP_MIRROR" >> "$TARGET"/etc/pacman.d/mirrorlist

# ROOT PASSWORD
echo -e 'roofix\nroofix' | arch-chroot "$TARGET" passwd

# TIMEZONE
ln -s "/usr/share/zoneinfo/$TZ" "$TARGET"/etc/localtime

# USER
arch-chroot "$TARGET" useradd -g users -G wheel,audio,video,power,disk,lp,network -m "$NEW_USER"
echo -e 'roofix\nroofix' | arch-chroot "$TARGET" passwd "$NEW_USER"

# SUDOERS
echo '%wheel ALL=(ALL) ALL' >> "$TARGET/etc/sudoers"

# SERVICES
for service in $SERVICES; do
  arch-chroot "$TARGET" systemctl enable "$service".service
done
